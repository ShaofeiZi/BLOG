(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{230:function(t,a,e){"use strict";e.r(a);var s=e(2),n=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"angular概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular概念","aria-hidden":"true"}},[t._v("#")]),t._v(" Angular概念")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/001.png",alt:""}})]),e("p",[e("img",{attrs:{src:"/images/angular_concept/002.png",alt:""}})]),e("p",[e("strong",[t._v("不能把Angular当作黑盒来使用,要充分了解它的内部结构。")])]),e("h2",{attrs:{id:"依赖注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入","aria-hidden":"true"}},[t._v("#")]),t._v(" 依赖注入")]),e("p",[t._v("1、 什么是依赖注入？")]),e("p",[t._v("2、依赖性注入框架")]),e("p",[t._v("Angular")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/003.png",alt:""}})]),e("p",[t._v("在angular中，我们只要记住依赖注入的三种角色："),e("strong",[t._v("使用者、服务(依赖对象)及注入器(Injector)")])]),e("ul",[e("li",[e("p",[t._v("** @Injectable是@Component的子类**")])]),e("li",[e("p",[t._v("每一个HTML标签上面都会有一个注射器实例")])]),e("li",[e("p",[t._v("注射是通过constructor(构造器)进行的")])])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/004.jpg",alt:""}})]),e("p",[e("strong",[t._v("注入器(Injectable)和提供器(Provider)")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/005.png",alt:""}})]),e("p",[t._v("3、依赖性注入进阶")]),e("p",[e("strong",[t._v("什么时候使用装饰器：@Injectable( )")])]),e("p",[e("strong",[t._v("当创建服务（service）需要在构造函数中注入依赖对象，就需要使用 Injectable 装饰器。")])]),e("p",[t._v("延伸1：@Injectable() 是必须的么？")]),e("p",[t._v("如果所创建的服务不依赖于其他对象，是可以不用使用 "),e("code",[t._v("Injectable")]),t._v(" 类装饰器。但当该服务需要在构造函数中注入依赖对象，就需要使用 Injectable 装饰器。不过比较推荐的做法不管是否有依赖对象，在创建服务时都使用 "),e("code",[t._v("Injectable 类装饰器")]),t._v("。")]),e("p",[t._v("延伸2：注入器的层级关系( 服务之间如何之间注入 )")]),e("ul",[e("li",[t._v("提供器可以声明在模块中，也可以声明在组件中。")]),e("li",[t._v("在angular中只有一种注入，那就是构造器注入。如发现无参构造器，这就说明这个组件没有被注入任何东西。")])]),e("h2",{attrs:{id:"changedeteccion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changedeteccion","aria-hidden":"true"}},[t._v("#")]),t._v(" ChangeDeteccion")]),e("p",[t._v("检测程序内部状态，然后反映到UI上")]),e("p",[t._v("引起状态变化(异步)：")]),e("ul",[e("li",[t._v("Events")]),e("li",[t._v("XHR")]),e("li",[t._v("Times")])]),e("h2",{attrs:{id:"指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指令","aria-hidden":"true"}},[t._v("#")]),t._v(" 指令")]),e("p",[t._v("组件是一种特殊的指令（组件是一种带模板的指令）")]),e("ul",[e("li",[t._v("结构型指令  --改变元素的布局")]),e("li",[t._v("属性型指令  --改变外观和行为")])]),e("blockquote",[e("p",[t._v("属性型指令")])]),e("p",[t._v("Renderer 2 和 ElementRef")]),e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),e("ul",[e("li",[t._v("Angular 不提倡直接操作DOM")]),e("li",[t._v("对于DOM的操作应该通过Renderer 2来进行")]),e("li",[t._v("ElementRef 可以理解成指向DOM元素的引用")])])]),e("blockquote",[e("p",[t._v("结构型指令")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/006.png",alt:""}})]),e("blockquote",[e("p",[t._v("样式")])]),e("p",[e("strong",[t._v("ngClass，ngStyle，[class.yourstyle]")])]),e("p",[t._v("ngClass： 用于条件动态指定样式类，适合对样式做大量更改的情况")]),e("p",[t._v("ngStyle： 用于条件动态指定样式，适合少量更改的情况")]),e("p",[t._v('[class.yourcondition]="condition" : 直接对应一个条件')]),e("h3",{attrs:{id:"延伸1-ng-template-与-ng-container-有什么区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延伸1-ng-template-与-ng-container-有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 延伸1: "),e("strong",[e("code",[t._v("<ng-template>")]),e("strong",[t._v("与")]),e("code",[t._v("<ng-container>")])]),t._v(" 有什么区别？")]),e("p",[e("strong",[e("code",[t._v("<ng-template>")])]),t._v(" 用于定义模板，使用 "),e("code",[t._v("*")]),t._v(" 语法糖的结构指令，最终都会转换为 "),e("code",[t._v("<ng-template>")]),t._v(" 模板指令，模板内的内容如果不进行处理，是不会在页面中显示")]),e("p",[e("code",[t._v("<ng-container>")]),t._v(" 是一个逻辑容器，可用于对节点进行分组，但不作为 DOM 树中的节点，它将被渲染为 HTML中的 "),e("code",[t._v("comment")]),t._v(" 元素，它可用于避免添加额外的元素来使用结构指令。")]),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),e("p",[e("code",[t._v("ng-container")]),t._v("既不是一个Component，也不是一个Directive，只是单纯的一个特殊tag。")])]),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),e("p",[t._v("这点类似于template，Angular复用了HTML5规范中template 的tag的语义，不过并没有真正利用其实现，因此在审查元素中是永远也找不到一个template元素的。\n不过，由于ng-container并不是HTML5中的，为了保持区分度，采用了ng-作为前缀。所以现在我们可以知道，ng-container是Angular所定义的一个特殊tag。")])]),e("h3",{attrs:{id:"延伸2：不要混淆-ng-container-与-ng-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延伸2：不要混淆-ng-container-与-ng-content","aria-hidden":"true"}},[t._v("#")]),t._v(" 延伸2：不要混淆 "),e("code",[t._v("ng-container")]),t._v(" 与 "),e("code",[t._v("ng-content")])]),e("p",[e("strong",[e("code",[t._v("ng-content")])]),t._v(" 是一个占位符，有些类似于"),e("code",[t._v("router-outlet")])]),e("p",[e("strong",[t._v("拓展1：")]),t._v("  那为什么要是使用"),e("code",[t._v("ng-content")]),t._v("？什么场景使用呢？")]),e("p",[t._v("答： 父组件包含子组件都是直接指明子组件的"),e("code",[t._v("selector")]),t._v("，比如子组件的"),e("code",[t._v("selector")]),t._v("叫"),e("code",[t._v("app-child")]),t._v("，那么嵌入父组件时直接指明即可:"),e("strong",[e("code",[t._v("<app-child></app-child>")])])]),e("p",[t._v("这是很硬性的编码，而"),e("code",[t._v("ng-content")]),t._v("就是用来替代这种硬性编码的。")]),e("h3",{attrs:{id:"延伸3：-templateref-与-viewcontainerref-有什么作用？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延伸3：-templateref-与-viewcontainerref-有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 延伸3： "),e("code",[t._v("TemplateRef")]),t._v(" 与 "),e("code",[t._v("ViewContainerRef")]),t._v(" 有什么作用？")]),e("ul",[e("li",[e("p",[t._v("TemplateRef：用于表示内嵌的 template 模板元素，通过 TemplateRef 实例，我们可以方便创建内嵌视图(Embedded Views)，且可以轻松地访问到通过 ElementRef 封装后的 nativeElement。需要注意的是组件视图中的 template 模板元素，经过渲染后会被替换成 comment 元素。")])]),e("li",[e("p",[t._v("ViewContainerRef：用于表示一个视图容器，可添加一个或多个视图。通过 ViewContainer\nRef 实例，我们可以基于 TemplateRef 实例创建内嵌视图，并能指定内嵌视图的插入位置，也可以方便对视图容器中已有的视图进行管理。简而言之，ViewContainerRef 的主要作用是创建和管理内嵌视图或组件视图。")])])]),e("h3",{attrs:{id:"延伸4：-viewchild和viewchildren"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延伸4：-viewchild和viewchildren","aria-hidden":"true"}},[t._v("#")]),t._v(" 延伸4： "),e("code",[t._v("ViewChild")]),t._v("和"),e("code",[t._v("ViewChildren")])]),e("p",[e("strong",[t._v("ViewChild")]),t._v(" 该装饰器用于获取模板视图中的元素或直接调用其组件中的方法。它支持 Type 类型或 string 类型的选择器，同时支持设置 read 查询条件，以获取不同类型的实例。比如"),e("code",[t._v("ElementRef")]),t._v("和"),e("code",[t._v("ViewContainerRef")]),t._v(".")]),e("p",[e("strong",[t._v("ViewChildren")]),t._v(" 该装饰器是用来从模板视图中获取匹配的多个元素，返回的结果是一个 QueryList 集合。")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/007.png",alt:""}})]),e("h3",{attrs:{id:"通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通信","aria-hidden":"true"}},[t._v("#")]),t._v(" 通信")]),e("ul",[e("li",[e("p",[t._v("父子组件通信")]),e("ul",[e("li",[t._v("父子组件通信一般使用@Input和@Output即可实现.")]),e("li",[t._v("通过Subject")])])]),e("li",[e("p",[t._v("非父子组件通信")]),e("ul",[e("li",[t._v("非父子组件见通信可以通过同一个service来实现。需要注意的是一定要在service中"),e("strong",[t._v("定义一个临时变量来供传递")])])])])]),e("h2",{attrs:{id:"模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块")]),e("p",[t._v("什么是模块？")]),e("p",[e("strong",[t._v("declarations:")]),t._v(" 模块内部"),e("code",[t._v("Components/Directives/Pipes")]),t._v("的列表，声明一下这个模块内部成员("),e("strong",[t._v("本模块创建的组件，加入到这个元数据中的组件才会被编译")]),t._v(")")]),e("p",[e("strong",[t._v("imports：")]),t._v(" 导入"),e("strong",[t._v("其他module")]),t._v("，其它module暴露的出的Components、Directives、Pipes等可以在本module的组件中被使用。比如导入CommonModule后就可以使用NgIf、NgFor等指令。("),e("strong",[t._v("引入的外部NG模块")]),t._v(")")]),e("p",[e("strong",[t._v("exports：")]),t._v(" 用来控制将哪些内部成员暴露给外部使用。导入一个module并不意味着会自动导入这个module内部导入的module所暴露出的公共成员。除非导入的这个module把它内部导入的module写到exports中。")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/008.png",alt:""}})]),e("p",[e("strong",[t._v("providers：")]),t._v(" 指定应用程序的根级别需要使用的service。（Angular2中没有模块级别的service，所有在NgModule中声明的Provider都是注册在根级别的Dependency Injector中）")]),e("p",[e("strong",[t._v("bootstrap：")]),t._v(" 通常是app启动的根组件，一般只有一个component。bootstrap中的组件会自动被放入到entryComponents中。("),e("strong",[t._v("声明启动引导哪个组件，必须是编译过的组件")]),t._v(")")]),e("p",[t._v("需要强调的是，"),e("code",[t._v("bootstrap")]),t._v("元数据声明的组件必须是编译过的组件：它要么属于 使用"),e("code",[t._v("imports")]),t._v("元数据引入的外部NG模块，要么是已经在"),e("code",[t._v("declarations")]),t._v("元数据 中声明的本地组件。")]),e("p",[e("strong",[t._v("entryCompoenents:")]),t._v(" 不会再模板中被引用到的组件。这个属性一般情况下只有ng自己使用，一般是bootstrap组件或者路由组件，ng会自动把bootstrap、路由组件放入其中。 除非不通过路由动态将component加入到dom中，否则不会用到这个属性。")]),e("p",[e("strong",[t._v("模块的元数据？")])]),e("p",[e("code",[t._v("@NgModule")]),t._v("元数据告诉Angular编译器要为当前模块编译哪些组件，以及如何把当前模块和其它模块链接起来。")]),e("p",[e("strong",[t._v("经常看到的"),e("code",[t._v("forRoot()")]),t._v("是什么鬼？")])]),e("p",[t._v("静态方法forRoot是一个约定，它可以让开发人员更轻松的配置模块的提供商。")]),e("p",[e("code",[t._v("RouterModule.forRoot")]),t._v("就是一个很好的例子。 应用把一个Routes对象传给"),e("code",[t._v("RouterModule.forRoot")]),t._v("，为的就是使用路由配置全应用级的Router服务。 "),e("code",[t._v("RouterModule.forRoot")]),t._v("返回一个"),e("code",[t._v("ModuleWithProviders")]),t._v("对象。 我们把这个结果添加到根模块AppModule的imports列表中。")]),e("p",[t._v("只能在应用的根模块AppModule中调用并导入.forRoot的结果。 在其它模块中导入它，特别是惰性加载模块中，是违反设计目标的并会导致一个运行时错误。")]),e("p",[t._v("RouterModule也提供了静态方法forChild，用于配置惰性加载模块的路由。")]),e("p",[t._v("forRoot和forChild都是方法的约定名称，它们分别用于在根模块和特性模块中配置服务。")]),e("p",[t._v("Angular并不识别这些名字，但是Angular的开发人员可以。 当你写类似的需要可配置的服务提供商时，请遵循这个约定。")]),e("h2",{attrs:{id:"模板型驱动表单-和-响应式表单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模板型驱动表单-和-响应式表单","aria-hidden":"true"}},[t._v("#")]),t._v(" 模板型驱动表单 和 响应式表单")]),e("ul",[e("li",[t._v("模板型驱动表单")])]),e("p",[e("strong",[t._v("特点")])]),e("p",[t._v("1、表单的数据绑定(例如ngModel的双向绑定)\n2、ngModel的困惑")]),e("ul",[e("li",[t._v("响应式表单")])]),e("p",[e("strong",[t._v("三个重要元素：")])]),e("ul",[e("li",[t._v("FormControl")]),e("li",[t._v("FormGroup")]),e("li",[t._v("FormBuilder")])]),e("h2",{attrs:{id:"路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由")]),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),e("th",{staticStyle:{"text-align":"right"}},[t._v("简介")])])]),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Routes")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("路由配置，保存着那个URL对应展示哪个组件，以及在哪个RouterOutlet中展示组件")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("RouterOutlet")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("在Html中标记路由呈现位置的占位符指令")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Router")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("负责在运行时执行路由的对象，可以通过调用器navigate() 和navigateByUrl()方法来导航到一个指定的路由")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("RouterLink")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("在Html中声明路由导航用的指令")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ActivedRoute")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("当前激活的路由对象，保存着当前路由的信息，如路由地址，路由参数等")])])])]),e("p",[t._v("** Routes **  其实是一个Route类的数组。")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/009.png",alt:""}})]),e("p",[t._v("而"),e("code",[t._v("Route")]),t._v("的参数如下图所示，一般情况下，"),e("code",[t._v("path")]),t._v("和"),e("code",[t._v("component")]),t._v("是必选的两个参数。比如："),e("code",[t._v("path:/a")]),t._v(","),e("code",[t._v("component:A")]),t._v("则说明，当地址为"),e("code",[t._v("/a")]),t._v("时，应该展示组件"),e("code",[t._v("A")]),t._v("的内容。")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/010.png",alt:""}})]),e("p",[e("strong",[t._v("其余类的简介见下图：")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/011.png",alt:""}})]),e("h3",{attrs:{id:"延伸1：-路由参数传递-参数传递的几种方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延伸1：-路由参数传递-参数传递的几种方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 延伸1： 路由参数传递 -- 参数传递的几种方式")]),e("ul",[e("li",[t._v("普通方式传递数据："),e("code",[t._v("/product?id=1&name=iphone => ActivatedRoute.queryParams[id]")]),t._v(";")]),e("li",[t._v("rest方式传递数据："),e("code",[t._v("{path:/product/:id} => /product/1 => ActivatedRoute.params[id];")])]),e("li",[t._v("路由配置传递数据："),e("code",[t._v("{path:/product,component:ProductComponent,data:[{madeInChina:true}]} => ActivatedRoute.data[0][madeInChina];")])])]),e("h2",{attrs:{id:"数据绑定、响应式编程和管道、-input-与-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据绑定、响应式编程和管道、-input-与-output","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据绑定、响应式编程和管道、@Input()与@Output()")]),e("blockquote",[e("p",[t._v("数据绑定: Angular中的数据绑定指的是同一组件中**控制器文件(.ts)"),e("strong",[t._v("与")]),t._v("视图文件(.html)**之间的数据传递。")])]),e("ul",[e("li",[t._v("单向绑定： 它的意思是要么是ts文件为html文件赋值，要么相反。")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/012.png",alt:""}})]),e("p",[e("img",{attrs:{src:"/images/angular_concept/013.png",alt:""}})]),e("ul",[e("li",[t._v("双向绑定: ts文件与html文件中绑定的值同时改变。")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/014.png",alt:""}})]),e("h4",{attrs:{id:"dom属性和html属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom属性和html属性","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM属性和HTML属性")]),e("ul",[e("li",[e("p",[t._v("1、少量 HTML 属性 和 DOM 属性之间有着1:1的映射，如id。("),e("strong",[t._v("HTML元素属性和DOM属性的名称和值大部分都相同")]),t._v(")")])]),e("li",[e("p",[t._v("2、有些HTML属性没有对应的DOM属性，如 colspan")])]),e("li",[e("p",[t._v("3、有些DOM属性没有对应的HTML属性，如textContent。有些名字相同，HTML属性和DOM属性的值也不是同一样东西。")])]),e("li",[e("p",[t._v("4、HTML属性的值指定了初始值；DOM属性的值标识当前值。"),e("strong",[t._v("DOM属性的值可以改变；HTML属性的值不能改变。")])])]),e("li",[e("p",[t._v("5、模板绑定是通过DOM属性和时间来工作的，而不是 HTML 属性。")])])]),e("h3",{attrs:{id:"dom属性绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom属性绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM属性绑定")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/015.png",alt:""}})]),e("h3",{attrs:{id:"html属性绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html属性绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" HTML属性绑定")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/016.png",alt:""}})]),e("p",[e("strong",[t._v("DOM绑定与HTML属性绑定的区别")])]),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}}),e("th",{staticStyle:{"text-align":"right"}},[t._v("DOM绑定")]),e("th",{staticStyle:{"text-align":"center"}},[t._v("HTML绑定")])])]),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("相同情况下")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("一个元素的id")]),e("td",{staticStyle:{"text-align":"center"}})]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("有html属性无dom属性")]),e("td",{staticStyle:{"text-align":"right"}}),e("td",{staticStyle:{"text-align":"center"}},[t._v("表格中td的colspan")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("有dom属性无html属性")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("textContent属性")]),e("td",{staticStyle:{"text-align":"center"}})]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("关于值")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("dom表示当前值")]),e("td",{staticStyle:{"text-align":"center"}},[t._v("html表示初始化值")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("关于可变")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("dom值是可变的")]),e("td",{staticStyle:{"text-align":"center"}},[t._v("html值是不可变的")])])])]),e("blockquote",[e("p",[t._v("总结:我们模板绑定是通过DOM属性来操作的，不是HTML属性来操作的")])]),e("h3",{attrs:{id:"类绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" 类绑定")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/017.png",alt:""}})]),e("h3",{attrs:{id:"样式绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#样式绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" 样式绑定")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/018.png",alt:""}})]),e("h4",{attrs:{id:"模板变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模板变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 模板变量")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/019.png",alt:""}})]),e("h5",{attrs:{id:"angular中的输入输出是通过注解-input和-output来标识，它位于组件控制器的属性上方。输入输出针对的对象是父子组件。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular中的输入输出是通过注解-input和-output来标识，它位于组件控制器的属性上方。输入输出针对的对象是父子组件。","aria-hidden":"true"}},[t._v("#")]),t._v(" Angular中的输入输出是通过注解"),e("code",[t._v("@Input")]),t._v("和"),e("code",[t._v("@Output")]),t._v("来标识，它位于组件控制器的属性上方。"),e("strong",[t._v("输入输出针对的对象是父子组件")]),t._v("。")]),e("h2",{attrs:{id:"rxjs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rxjs","aria-hidden":"true"}},[t._v("#")]),t._v(" RxJS")]),e("h2",{attrs:{id:"redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux","aria-hidden":"true"}},[t._v("#")]),t._v(" Redux")]),e("p",[t._v("1、Redux 是什么？")]),e("p",[t._v("全局的、唯一的、不可变的内存状态[数据库]")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/020.png",alt:""}})]),e("h2",{attrs:{id:"angular-整合redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular-整合redux","aria-hidden":"true"}},[t._v("#")]),t._v(" Angular 整合Redux")]),e("h4",{attrs:{id:"导入ngredux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入ngredux","aria-hidden":"true"}},[t._v("#")]),t._v(" 导入NgRedux")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/021.png",alt:""}})]),e("h4",{attrs:{id:"构造参数为store的构造器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造参数为store的构造器","aria-hidden":"true"}},[t._v("#")]),t._v(" 构造参数为"),e("code",[t._v("store")]),t._v("的构造器")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/022.png",alt:""}})]),e("h4",{attrs:{id:"在你的组件-components-中使用store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在你的组件-components-中使用store","aria-hidden":"true"}},[t._v("#")]),t._v(" 在你的组件(components)中使用"),e("code",[t._v("store")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/023.png",alt:""}})]),e("h4",{attrs:{id:"注入actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注入actions","aria-hidden":"true"}},[t._v("#")]),t._v(" 注入Actions")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/024.png",alt:""}})]),e("h4",{attrs:{id:"accessing-访问-services-from-actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accessing-访问-services-from-actions","aria-hidden":"true"}},[t._v("#")]),t._v(" Accessing(访问) Services from Actions")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/025.png",alt:""}})]),e("h4",{attrs:{id:"dispatching-调度、派遣-actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dispatching-调度、派遣-actions","aria-hidden":"true"}},[t._v("#")]),t._v(" Dispatching(调度、派遣) Actions")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/026.png",alt:""}})]),e("h2",{attrs:{id:"目前angular整合redux两种方式："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目前angular整合redux两种方式：","aria-hidden":"true"}},[t._v("#")]),t._v(" 目前Angular整合Redux两种方式：")]),e("ul",[e("li",[e("p",[e("code",[t._v("Ng-redux")]),t._v(" 核心仍使用 Redux，增加對 Angular 的支援")])]),e("li",[e("p",[e("code",[t._v("Ngrx")]),t._v(" 只有概念使用 Redux，核心完全使用 RxJS 重新操作。")])])]),e("p",[e("strong",[t._v("安裝 Ngrx")])]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install @ngrx/core @ngrx/store --save\n")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/027.png",alt:""}})]),e("p",[e("img",{attrs:{src:"/images/angular_concept/028.gif",alt:""}})]),e("p",[e("strong",[t._v("View")]),t._v(" 相当于"),e("code",[t._v("component")]),t._v("，主要在显示使用者界面。")]),e("p",[e("strong",[t._v("Action")]),t._v(" 当"),e("code",[t._v("component")]),t._v(" 有任何 "),e("code",[t._v("event")]),t._v(" 時，会对 "),e("code",[t._v("Ngrx")]),t._v(" 发出 "),e("code",[t._v("action")]),t._v("。")]),e("p",[e("strong",[t._v("Middleware")]),t._v(" 负责存取对 "),e("code",[t._v("server")]),t._v(" 端的 API")]),e("p",[e("strong",[t._v("Dispatcher")]),t._v(" 负责接受 "),e("code",[t._v("component")]),t._v(" 传来的 action，并将 "),e("code",[t._v("action")]),t._v(" 传给 "),e("code",[t._v("reducer")]),t._v("。")]),e("p",[e("strong",[t._v("Store")]),t._v(" 可是为 "),e("code",[t._v("Ngrx")]),t._v(" 在浏览器端的资料库，各 "),e("code",[t._v("component")]),t._v(" 的资料都可统一放在这里。")]),e("p",[e("strong",[t._v("Reducer")]),t._v(" 根据"),e("code",[t._v("dispatcher")]),t._v(" 传来的 "),e("code",[t._v("action")]),t._v("，决定该如何写入state。")]),e("p",[t._v("当 "),e("code",[t._v("state")]),t._v(" 有改变时，將通知有"),e("code",[t._v("subscribe")]),t._v("该"),e("code",[t._v("state")]),t._v("的"),e("code",[t._v("component")]),t._v("自动更新。")]),e("p",[e("strong",[t._v("State")]),t._v(" 存放在 "),e("code",[t._v("store")]),t._v(" 內的资料。")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/029.svg",alt:""}})]),e("p",[t._v("有些东西Ngrx 已经帮我们做了，真的要我们自己操作只有 4 个部份，且资料流为单向的 : "),e("code",[t._v("Component -> Action -> Reducer -> Store -> Component")]),t._v("。")]),e("h3",{attrs:{id:"什么时候该使用ngrx？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么时候该使用ngrx？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么时候该使用Ngrx？")]),e("ul",[e("li",[t._v("当多个 "),e("code",[t._v("component")]),t._v(" 需使用共用资料，且各 "),e("code",[t._v("component")]),t._v(" 的操作会影像其他 "),e("code",[t._v("component")]),t._v(" 的结果。")]),e("li",[t._v("资料可能同时被多个"),e("code",[t._v("component")]),t._v("修改，甚至同時被 "),e("code",[t._v("server API")]),t._v("修改。")]),e("li",[t._v("需要操作undo/redo 功能。")])]),e("blockquote",[e("p",[t._v("案例--操作：")])]),e("p",[e("a",{attrs:{href:"https://github.com/ngrx/platform/blob/master/MIGRATION.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("新版迁移指南 ：https://github.com/ngrx/platform/blob/master/MIGRATION.md")])]),e("p",[e("strong",[t._v("AppModule：app.module.ts")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/030.png",alt:""}})]),e("p",[e("strong",[t._v("AppComponent ：--\x3e app.component.html、app.component.ts")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/031.png",alt:""}})]),e("p",[e("strong",[t._v("Action ：--\x3e counter.action.ts")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/032.png",alt:""}})]),e("p",[e("strong",[t._v("Reducer ：--\x3e counter.reducer.ts")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/033.png",alt:""}})]),e("p",[e("strong",[t._v("Store ：--\x3e counter.store.ts")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/034.png",alt:""}})]),e("h3",{attrs:{id:"redux-在您的angular应用使用reselect进行状态函数的高阶运算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux-在您的angular应用使用reselect进行状态函数的高阶运算","aria-hidden":"true"}},[t._v("#")]),t._v(" Redux 在您的Angular应用使用"),e("code",[t._v("reselect")]),t._v("进行状态函数的高阶运算")]),e("p",[t._v("reselect：带‘记忆’功能的函数运算")]),e("p",[t._v("无论多少参数，最后一个才是用于函数计算，其他的都是他的输入")]),e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" getTasksWithOwner "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getTasks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("getUserEntities"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tasks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("entities"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tasks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("task")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" owner "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entites"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("task"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" participants "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("task"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("participantIds"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("id")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" entites"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("assgin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("task"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("owner"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("owner"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("participants"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("participants"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),e("h2",{attrs:{id:"使用-ngrx-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-ngrx-store","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用"),e("code",[t._v("@ngrx/store")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/035.png",alt:""}})]),e("p",[e("strong",[t._v("Registering Reducers")]),e("img",{attrs:{src:"/images/angular_concept/036.png",alt:""}})]),e("p",[t._v("简化：\n"),e("img",{attrs:{src:"/images/angular_concept/037.png",alt:""}})]),e("p",[t._v("示例：\n"),e("img",{attrs:{src:"/images/angular_concept/038.png",alt:""}})]),e("h2",{attrs:{id:"什么是effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是effect","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是Effect?")]),e("p",[e("code",[t._v("@Effect()")]),t._v(" 标识是一个"),e("code",[t._v("Observable<Action>")]),t._v("流。")]),e("p",[e("img",{attrs:{src:"/images/angular_concept/039.png",alt:""}})]),e("p",[e("img",{attrs:{src:"/images/angular_concept/040.png",alt:""}})]),e("p",[e("img",{attrs:{src:"/images/angular_concept/041.png",alt:""}})]),e("p",[e("strong",[t._v("使用effect："),e("code",[t._v("import {Actions, Effect} from '@ngrx/effects';")])])]),e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("@"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthEffects")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过构造注入需要的服务和 action 信号流")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" actions$"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Actions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" authService"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AuthService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用 @Effect() 修饰器来标明这是一个 Effect")]),t._v("\n  @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Effect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  login$"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Observable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("actions$ "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// action 信号流")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("authActions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ActionTypes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOGIN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是 LOGIN Action")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("toPayload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换成 action 的 payload 数据流")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("switchMap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用服务")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("authService\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("username"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("password"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果成功发出 LOGIN_SUCCESS Action 交给其它 Effect 或者 Reducer 去处理")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("user")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("authActions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LoginSuccessAction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果失败发出 LOGIN_FAIL Action 交给其它 Effect 或者 Reducer 去处理")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("actions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LoginFailAction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("p",[t._v("顺序安装依赖库")]),e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("$ npm i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save @ngrx"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("core\n$ npm i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save @ngrx"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("store\n$ npm i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save @ngrx"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("effects\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 我们使用reselect来实现高效的`state`存取操作。我们将使用`reselect`的\n * `createSelector`方法来创建高效的选择器，这个选择器能被存储且仅在参\n * 数更改的时候才会重构\n */")]),t._v("\n$ npm i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save reselect\n \n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * 为了让开发更加方便并易于调试，我们添加能够在控制台记\n  * 录action和state的更新的store-logger来帮助我们\n  */")]),t._v("\n$ npm i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save ngrx"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("store"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("logger \n")])]),e("p",[t._v("示例：\n"),e("img",{attrs:{src:"/images/angular_concept/042.png",alt:""}})]),e("h2",{attrs:{id:"使用-ngrx-router-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-ngrx-router-store","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用"),e("code",[t._v("@ngrx/router-store")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/043.png",alt:""}})]),e("h3",{attrs:{id:"navigation-actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigation-actions","aria-hidden":"true"}},[t._v("#")]),e("strong",[t._v("Navigation actions")])]),e("p",[e("img",{attrs:{src:"/images/angular_concept/044.png",alt:""}})]),e("p",[t._v("示例：\n"),e("img",{attrs:{src:"/images/angular_concept/045.png",alt:""}})]),e("h2",{attrs:{id:"使用-ngrx-store-devtools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-ngrx-store-devtools","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用"),e("code",[t._v("@ngrx/store-devtools")])]),e("p",[t._v("注册到模块中")]),e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" StoreDevtoolsModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@ngrx/store-devtools'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" environment "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../environments/environment'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Angular CLI environment")]),t._v("\n\n@"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("NgModule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  imports"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("environment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("production "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" StoreDevtoolsModule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("instrument")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" maxAge"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppModule")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("h2",{attrs:{id:"常出现的异常解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常出现的异常解决方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 常出现的异常解决方案")]),e("p",[t._v("1、多次声明同一个组件")]),e("p",[t._v("组件是 Angular 应用程序中的常见构建块。每个组件都需要在** "),e("code",[t._v("@NgModule.declarations")]),t._v("** 数组中声明，才能够使用。在 Angular 中是不允许在多个模块中声明同一个组件，如果一个组件在多个模块中声明的话，那么 Angular 编译器将会抛出异常。")]),e("blockquote",[e("p",[t._v("场景使用 -- 在多个模块中使用同一个组件是允许的")])]),e("ul",[e("li",[e("p",[t._v("如果一个模块作为另一个模块的子模块，那么针对上面的场景解决方案将是：")]),e("ul",[e("li",[t._v("在子模块的 ** @NgModule.declaration ** 中声 "),e("strong",[t._v("HeroComponent")]),t._v(" 组件")]),e("li",[t._v("通过子模块的** @NgModule.exports **数组中导出该组件")]),e("li",[t._v("在父模块的 ** @NgModule.imports **数组中导入子模块")])])]),e("li",[e("p",[t._v("对于其它情况，我们可以创建一个新的模块(共享模块)，如** SharedModule** 模块。具体步骤如下：")]),e("ul",[e("li",[t._v("在 "),e("strong",[t._v("SharedModule")]),t._v(" 中声明和导出 "),e("strong",[t._v("HeroComponent")])]),e("li",[t._v("在需要使用 "),e("strong",[t._v("HeroComponent")]),t._v(" 的模块中导入** SharedModule**")])])])]),e("p",[t._v("2、"),e("strong",[t._v("angular: Error: Uncaught (in promise): Error: StaticInjectorError...")])]),e("p",[t._v("原因：构建的service没有添加到module里造成的 或者 service module没有在app 的module下引入。")]),e("p",[t._v("3、"),e("strong",[t._v("core.js:1350 ERROR Error: Uncaught (in promise): Error: StaticInjectorError[Http]: StaticInjectorError[Http]: NullInjectorError: No provider for Http!")])]),e("p",[t._v("将HttpMoudle导入到我的app.module.ts中，问题就没有了")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { HttpModule } from '@angular/http';\n")])])])}],!1,null,null,null);a.default=n.exports}}]);